image:
  # -- repository with gotify image
  repository: gotify/server
  # -- pull policy
  pullPolicy: Always
  # -- current version of the image
  tag: ""

# -- imagePullSecrets (not needed, if default image is used)
imagePullSecrets: []

# -- @ignore
nameOverride: ""
# -- @ignore
fullnameOverride: ""

gotify_config:
  # https://gotify.net/docs/config
  server:
    keepaliveperiodseconds: 0
    listenaddr: ""
    # Default to a port > 1024 to avoid needing root privileges
    # or cap_net_bind_service
    port: 8080
    ssl:
      enabled: false
      redirecttohttps: true
      listenaddr: ""
      port: 443
      certfile:
      certkey:
      letsencrypt:
        enabled: false
        accepttos: false
        cache: data/certs
        hosts:
        # - mydomain.tld
        # - myotherdomain.tld
  # responseHeaders: "Access-Control-Allow-Origin: \"*\"\nAccess-Control-Allow-Methods: \"GET,POST\""
    responseheaders:
    # X-Custom-Header: "custom value"

    cors:
      alloworigins:
      # - ".+.example.com"
      # - "otherdomain.com"
      allowmethods:
      # - "GET"
      # - "POST"
      allowheaders:
      # - "Authorization"
      # - "content-type"
    stream:
      pingperiodseconds: 45
      allowedorigins:
      # - ".+.example.com"
      # - "otherdomain.com"
  database:
    # -- select database kind (sqlite3, mysql, postgres)
    dialect: sqlite3
    # -- set connection string for mysql (gotify:secret@/gotifydb?charset=utf8&parseTime=True&loc=Local) or postgresql (host=localhost port=3306 user=gotify dbname=gotify password=secret)
    connection: data/gotify.db
  defaultuser:
    # -- default user
    name: admin
    # -- default user password
    pass: admin
  # -- minimal password length
  passstrength: 10
  uploadedimagesdir: data/images
  pluginsdir: data/plugins
  # -- is user registration enabled?
  registration: false
# -- server timezone
timezone: Europe/Tallinn

serviceAccount:
  # -- enable serviceAccount
  create: true
  # -- add annotations to serviceAccount
  annotations: {}
  # -- name of the serviceAccount (will be generated if empty)
  name: ""

# -- @ignore
podAnnotations: {}

# -- @ignore
podSecurityContext: {}
  # fsGroup: 2000

# -- @ignore
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

service:
  type: ClusterIP
  port: 80

# -- Configure ingress
ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  # -- enable persistence when true
  enabled: false
  # -- default storage size
  size: 20Gi
  # -- accessMode
  accessMode: ReadWriteOnce
  # -- actual storageClass
  storageClass: ""

# -- @ignore
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- @ignore
nodeSelector: {}

# -- @ignore
tolerations: []

# -- @ignore
affinity: {}
